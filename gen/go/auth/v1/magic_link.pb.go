// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: auth/v1/magic_link.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SendMagicLinkRequest is used to request a magic link for authentication.
type SendMagicLinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Email address to send the magic link to.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Optional name for new users.
	Name *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional redirect URL after successful verification.
	RedirectUrl   *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMagicLinkRequest) Reset() {
	*x = SendMagicLinkRequest{}
	mi := &file_auth_v1_magic_link_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMagicLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMagicLinkRequest) ProtoMessage() {}

func (x *SendMagicLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_magic_link_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMagicLinkRequest.ProtoReflect.Descriptor instead.
func (*SendMagicLinkRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_magic_link_proto_rawDescGZIP(), []int{0}
}

func (x *SendMagicLinkRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendMagicLinkRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *SendMagicLinkRequest) GetRedirectUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.RedirectUrl
	}
	return nil
}

// SendMagicLinkResponse confirms that a magic link was sent.
type SendMagicLinkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Verification ID to be used with the OTP.
	VerificationId string `protobuf:"bytes,1,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"`
	// Indicates if a new user was created.
	IsNewUser     bool `protobuf:"varint,2,opt,name=is_new_user,json=isNewUser,proto3" json:"is_new_user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMagicLinkResponse) Reset() {
	*x = SendMagicLinkResponse{}
	mi := &file_auth_v1_magic_link_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMagicLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMagicLinkResponse) ProtoMessage() {}

func (x *SendMagicLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_magic_link_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMagicLinkResponse.ProtoReflect.Descriptor instead.
func (*SendMagicLinkResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_magic_link_proto_rawDescGZIP(), []int{1}
}

func (x *SendMagicLinkResponse) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

func (x *SendMagicLinkResponse) GetIsNewUser() bool {
	if x != nil {
		return x.IsNewUser
	}
	return false
}

// VerifyMagicLinkRequest is used to verify a magic link.
type VerifyMagicLinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OTP verification data.
	Verification  *OTPVerification `protobuf:"bytes,1,opt,name=verification,proto3" json:"verification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyMagicLinkRequest) Reset() {
	*x = VerifyMagicLinkRequest{}
	mi := &file_auth_v1_magic_link_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMagicLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMagicLinkRequest) ProtoMessage() {}

func (x *VerifyMagicLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_magic_link_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMagicLinkRequest.ProtoReflect.Descriptor instead.
func (*VerifyMagicLinkRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_magic_link_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyMagicLinkRequest) GetVerification() *OTPVerification {
	if x != nil {
		return x.Verification
	}
	return nil
}

// VerifyMagicLinkResponse returns authentication tokens after successful verification.
type VerifyMagicLinkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Authentication tokens for the user.
	Auth          *AuthResponse `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyMagicLinkResponse) Reset() {
	*x = VerifyMagicLinkResponse{}
	mi := &file_auth_v1_magic_link_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMagicLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMagicLinkResponse) ProtoMessage() {}

func (x *VerifyMagicLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_magic_link_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMagicLinkResponse.ProtoReflect.Descriptor instead.
func (*VerifyMagicLinkResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_magic_link_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyMagicLinkResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

var File_auth_v1_magic_link_proto protoreflect.FileDescriptor

var file_auth_v1_magic_link_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x1a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x01, 0x0a, 0x14, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x60, 0x0a, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x22, 0x56, 0x0a,
	0x16, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x54, 0x50, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d,
	0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x32, 0xbc, 0x01, 0x0a, 0x10,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69,
	0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x68, 0x75, 0x62,
	0x64, 0x65, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_auth_v1_magic_link_proto_rawDescOnce sync.Once
	file_auth_v1_magic_link_proto_rawDescData []byte
)

func file_auth_v1_magic_link_proto_rawDescGZIP() []byte {
	file_auth_v1_magic_link_proto_rawDescOnce.Do(func() {
		file_auth_v1_magic_link_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_auth_v1_magic_link_proto_rawDesc), len(file_auth_v1_magic_link_proto_rawDesc)))
	})
	return file_auth_v1_magic_link_proto_rawDescData
}

var file_auth_v1_magic_link_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_auth_v1_magic_link_proto_goTypes = []any{
	(*SendMagicLinkRequest)(nil),    // 0: auth.v1.SendMagicLinkRequest
	(*SendMagicLinkResponse)(nil),   // 1: auth.v1.SendMagicLinkResponse
	(*VerifyMagicLinkRequest)(nil),  // 2: auth.v1.VerifyMagicLinkRequest
	(*VerifyMagicLinkResponse)(nil), // 3: auth.v1.VerifyMagicLinkResponse
	(*wrapperspb.StringValue)(nil),  // 4: google.protobuf.StringValue
	(*OTPVerification)(nil),         // 5: auth.v1.OTPVerification
	(*AuthResponse)(nil),            // 6: auth.v1.AuthResponse
}
var file_auth_v1_magic_link_proto_depIdxs = []int32{
	4, // 0: auth.v1.SendMagicLinkRequest.name:type_name -> google.protobuf.StringValue
	4, // 1: auth.v1.SendMagicLinkRequest.redirect_url:type_name -> google.protobuf.StringValue
	5, // 2: auth.v1.VerifyMagicLinkRequest.verification:type_name -> auth.v1.OTPVerification
	6, // 3: auth.v1.VerifyMagicLinkResponse.auth:type_name -> auth.v1.AuthResponse
	0, // 4: auth.v1.MagicLinkService.SendMagicLink:input_type -> auth.v1.SendMagicLinkRequest
	2, // 5: auth.v1.MagicLinkService.VerifyMagicLink:input_type -> auth.v1.VerifyMagicLinkRequest
	1, // 6: auth.v1.MagicLinkService.SendMagicLink:output_type -> auth.v1.SendMagicLinkResponse
	3, // 7: auth.v1.MagicLinkService.VerifyMagicLink:output_type -> auth.v1.VerifyMagicLinkResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_auth_v1_magic_link_proto_init() }
func file_auth_v1_magic_link_proto_init() {
	if File_auth_v1_magic_link_proto != nil {
		return
	}
	file_auth_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_auth_v1_magic_link_proto_rawDesc), len(file_auth_v1_magic_link_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_v1_magic_link_proto_goTypes,
		DependencyIndexes: file_auth_v1_magic_link_proto_depIdxs,
		MessageInfos:      file_auth_v1_magic_link_proto_msgTypes,
	}.Build()
	File_auth_v1_magic_link_proto = out.File
	file_auth_v1_magic_link_proto_goTypes = nil
	file_auth_v1_magic_link_proto_depIdxs = nil
}
