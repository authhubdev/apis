// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file auth/v1/password.proto (package auth.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { AuthResponse, OTPVerification } from "./common_pb";
import { file_auth_v1_common } from "./common_pb";
import type { SuccessResponse } from "../../common/v1/common_pb";
import { file_common_v1_common } from "../../common/v1/common_pb";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file auth/v1/password.proto.
 */
export const file_auth_v1_password: GenFile = /*@__PURE__*/
  fileDesc("ChZhdXRoL3YxL3Bhc3N3b3JkLnByb3RvEgdhdXRoLnYxIi8KDExvZ2luUmVxdWVzdBINCgVlbWFpbBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSI0Cg1Mb2dpblJlc3BvbnNlEiMKBGF1dGgYASABKAsyFS5hdXRoLnYxLkF1dGhSZXNwb25zZSJeCg9SZWdpc3RlclJlcXVlc3QSDQoFZW1haWwYASABKAkSEAoIcGFzc3dvcmQYAiABKAkSKgoEbmFtZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSI3ChBSZWdpc3RlclJlc3BvbnNlEiMKBGF1dGgYASABKAsyFS5hdXRoLnYxLkF1dGhSZXNwb25zZSIsChtSZXF1ZXN0UGFzc3dvcmRSZXNldFJlcXVlc3QSDQoFZW1haWwYASABKAkiNwocUmVxdWVzdFBhc3N3b3JkUmVzZXRSZXNwb25zZRIXCg92ZXJpZmljYXRpb25faWQYASABKAkiXAoUUmVzZXRQYXNzd29yZFJlcXVlc3QSLgoMdmVyaWZpY2F0aW9uGAEgASgLMhguYXV0aC52MS5PVFBWZXJpZmljYXRpb24SFAoMbmV3X3Bhc3N3b3JkGAIgASgJIkMKFVJlc2V0UGFzc3dvcmRSZXNwb25zZRIqCgZyZXN1bHQYASABKAsyGi5jb21tb24udjEuU3VjY2Vzc1Jlc3BvbnNlMscCCg9QYXNzd29yZFNlcnZpY2USOAoFTG9naW4SFS5hdXRoLnYxLkxvZ2luUmVxdWVzdBoWLmF1dGgudjEuTG9naW5SZXNwb25zZSIAEkEKCFJlZ2lzdGVyEhguYXV0aC52MS5SZWdpc3RlclJlcXVlc3QaGS5hdXRoLnYxLlJlZ2lzdGVyUmVzcG9uc2UiABJlChRSZXF1ZXN0UGFzc3dvcmRSZXNldBIkLmF1dGgudjEuUmVxdWVzdFBhc3N3b3JkUmVzZXRSZXF1ZXN0GiUuYXV0aC52MS5SZXF1ZXN0UGFzc3dvcmRSZXNldFJlc3BvbnNlIgASUAoNUmVzZXRQYXNzd29yZBIdLmF1dGgudjEuUmVzZXRQYXNzd29yZFJlcXVlc3QaHi5hdXRoLnYxLlJlc2V0UGFzc3dvcmRSZXNwb25zZSIAQjJaMGdpdGh1Yi5jb20vYXV0aGh1YmRldi9hcGlzL2dlbi9nby9hdXRoL3YxO2F1dGh2MWIGcHJvdG8z", [file_auth_v1_common, file_common_v1_common, file_google_protobuf_wrappers]);

/**
 * LoginRequest contains credentials for authentication.
 *
 * @generated from message auth.v1.LoginRequest
 */
export type LoginRequest = Message<"auth.v1.LoginRequest"> & {
  /**
   * Email address of the user.
   *
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * User's password.
   *
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message auth.v1.LoginRequest.
 * Use `create(LoginRequestSchema)` to create a new message.
 */
export const LoginRequestSchema: GenMessage<LoginRequest> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 0);

/**
 * LoginResponse contains authentication tokens after successful login.
 *
 * @generated from message auth.v1.LoginResponse
 */
export type LoginResponse = Message<"auth.v1.LoginResponse"> & {
  /**
   * Authentication response with tokens.
   *
   * @generated from field: auth.v1.AuthResponse auth = 1;
   */
  auth?: AuthResponse;
};

/**
 * Describes the message auth.v1.LoginResponse.
 * Use `create(LoginResponseSchema)` to create a new message.
 */
export const LoginResponseSchema: GenMessage<LoginResponse> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 1);

/**
 * RegisterRequest contains information for creating a new account.
 *
 * @generated from message auth.v1.RegisterRequest
 */
export type RegisterRequest = Message<"auth.v1.RegisterRequest"> & {
  /**
   * Email address for the new account.
   *
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * Password for the new account.
   *
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * Optional display name for the user.
   *
   * @generated from field: google.protobuf.StringValue name = 3;
   */
  name?: string;
};

/**
 * Describes the message auth.v1.RegisterRequest.
 * Use `create(RegisterRequestSchema)` to create a new message.
 */
export const RegisterRequestSchema: GenMessage<RegisterRequest> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 2);

/**
 * RegisterResponse contains authentication tokens after successful registration.
 *
 * @generated from message auth.v1.RegisterResponse
 */
export type RegisterResponse = Message<"auth.v1.RegisterResponse"> & {
  /**
   * Authentication response with tokens.
   *
   * @generated from field: auth.v1.AuthResponse auth = 1;
   */
  auth?: AuthResponse;
};

/**
 * Describes the message auth.v1.RegisterResponse.
 * Use `create(RegisterResponseSchema)` to create a new message.
 */
export const RegisterResponseSchema: GenMessage<RegisterResponse> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 3);

/**
 * RequestPasswordResetRequest initiates the password reset process.
 *
 * @generated from message auth.v1.RequestPasswordResetRequest
 */
export type RequestPasswordResetRequest = Message<"auth.v1.RequestPasswordResetRequest"> & {
  /**
   * Email address of the account.
   *
   * @generated from field: string email = 1;
   */
  email: string;
};

/**
 * Describes the message auth.v1.RequestPasswordResetRequest.
 * Use `create(RequestPasswordResetRequestSchema)` to create a new message.
 */
export const RequestPasswordResetRequestSchema: GenMessage<RequestPasswordResetRequest> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 4);

/**
 * RequestPasswordResetResponse confirms the password reset process has been initiated.
 *
 * @generated from message auth.v1.RequestPasswordResetResponse
 */
export type RequestPasswordResetResponse = Message<"auth.v1.RequestPasswordResetResponse"> & {
  /**
   * Verification ID to be used with the OTP.
   *
   * @generated from field: string verification_id = 1;
   */
  verificationId: string;
};

/**
 * Describes the message auth.v1.RequestPasswordResetResponse.
 * Use `create(RequestPasswordResetResponseSchema)` to create a new message.
 */
export const RequestPasswordResetResponseSchema: GenMessage<RequestPasswordResetResponse> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 5);

/**
 * ResetPasswordRequest contains verification and new password.
 *
 * @generated from message auth.v1.ResetPasswordRequest
 */
export type ResetPasswordRequest = Message<"auth.v1.ResetPasswordRequest"> & {
  /**
   * OTP verification data.
   *
   * @generated from field: auth.v1.OTPVerification verification = 1;
   */
  verification?: OTPVerification;

  /**
   * New password to set.
   *
   * @generated from field: string new_password = 2;
   */
  newPassword: string;
};

/**
 * Describes the message auth.v1.ResetPasswordRequest.
 * Use `create(ResetPasswordRequestSchema)` to create a new message.
 */
export const ResetPasswordRequestSchema: GenMessage<ResetPasswordRequest> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 6);

/**
 * ResetPasswordResponse confirms the password has been reset.
 *
 * @generated from message auth.v1.ResetPasswordResponse
 */
export type ResetPasswordResponse = Message<"auth.v1.ResetPasswordResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message auth.v1.ResetPasswordResponse.
 * Use `create(ResetPasswordResponseSchema)` to create a new message.
 */
export const ResetPasswordResponseSchema: GenMessage<ResetPasswordResponse> = /*@__PURE__*/
  messageDesc(file_auth_v1_password, 7);

/**
 * PasswordService provides authentication via password.
 *
 * @generated from service auth.v1.PasswordService
 */
export const PasswordService: GenService<{
  /**
   * Login authenticates a user with email and password.
   *
   * @generated from rpc auth.v1.PasswordService.Login
   */
  login: {
    methodKind: "unary";
    input: typeof LoginRequestSchema;
    output: typeof LoginResponseSchema;
  },
  /**
   * Register creates a new account with email and password.
   *
   * @generated from rpc auth.v1.PasswordService.Register
   */
  register: {
    methodKind: "unary";
    input: typeof RegisterRequestSchema;
    output: typeof RegisterResponseSchema;
  },
  /**
   * RequestPasswordReset initiates a password reset process.
   *
   * @generated from rpc auth.v1.PasswordService.RequestPasswordReset
   */
  requestPasswordReset: {
    methodKind: "unary";
    input: typeof RequestPasswordResetRequestSchema;
    output: typeof RequestPasswordResetResponseSchema;
  },
  /**
   * ResetPassword completes a password reset process with OTP verification.
   *
   * @generated from rpc auth.v1.PasswordService.ResetPassword
   */
  resetPassword: {
    methodKind: "unary";
    input: typeof ResetPasswordRequestSchema;
    output: typeof ResetPasswordResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_auth_v1_password, 0);

