// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file profile/v1/profile.proto (package profile.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { OTPVerification } from "../../auth/v1/common_pb";
import { file_auth_v1_common } from "../../auth/v1/common_pb";
import type { SuccessResponse } from "../../common/v1/common_pb";
import { file_common_v1_common } from "../../common/v1/common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file profile/v1/profile.proto.
 */
export const file_profile_v1_profile: GenFile = /*@__PURE__*/
  fileDesc("Chhwcm9maWxlL3YxL3Byb2ZpbGUucHJvdG8SCnByb2ZpbGUudjEi/wEKC1VzZXJQcm9maWxlEgoKAmlkGAEgASgJEioKBG5hbWUYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSDQoFZW1haWwYAyABKAkSFwoPZW1haWxfY29uZmlybWVkGAQgASgIEjAKCmF2YXRhcl91cmwYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoKY3JlYXRlZF9hdBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiEwoRR2V0UHJvZmlsZVJlcXVlc3QiPgoSR2V0UHJvZmlsZVJlc3BvbnNlEigKB3Byb2ZpbGUYASABKAsyFy5wcm9maWxlLnYxLlVzZXJQcm9maWxlIicKElVwZGF0ZUVtYWlsUmVxdWVzdBIRCgluZXdfZW1haWwYASABKAkiQQoTVXBkYXRlRW1haWxSZXNwb25zZRIqCgZyZXN1bHQYASABKAsyGi5jb21tb24udjEuU3VjY2Vzc1Jlc3BvbnNlIkcKFUNoYW5nZVBhc3N3b3JkUmVxdWVzdBIYChBjdXJyZW50X3Bhc3N3b3JkGAEgASgJEhQKDG5ld19wYXNzd29yZBgCIAEoCSJEChZDaGFuZ2VQYXNzd29yZFJlc3BvbnNlEioKBnJlc3VsdBgBIAEoCzIaLmNvbW1vbi52MS5TdWNjZXNzUmVzcG9uc2UiRAoSVmVyaWZ5RW1haWxSZXF1ZXN0Ei4KDHZlcmlmaWNhdGlvbhgBIAEoCzIYLmF1dGgudjEuT1RQVmVyaWZpY2F0aW9uIkEKE1ZlcmlmeUVtYWlsUmVzcG9uc2USKgoGcmVzdWx0GAEgASgLMhouY29tbW9uLnYxLlN1Y2Nlc3NSZXNwb25zZSIgCh5SZXNlbmRWZXJpZmljYXRpb25FbWFpbFJlcXVlc3QiTQofUmVzZW5kVmVyaWZpY2F0aW9uRW1haWxSZXNwb25zZRIqCgZyZXN1bHQYASABKAsyGi5jb21tb24udjEuU3VjY2Vzc1Jlc3BvbnNlInwKGUdldEF2YXRhclVwbG9hZFVSTFJlcXVlc3QSLwoJZmlsZV90eXBlGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCG1heF9zaXplGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQ2NFZhbHVlIlYKGkdldEF2YXRhclVwbG9hZFVSTFJlc3BvbnNlEhIKCnVwbG9hZF91cmwYASABKAkSEAoIZmlsZV91cmwYAiABKAkSEgoKZXhwaXJlc19pbhgDIAEoBCIpChNVcGRhdGVBdmF0YXJSZXF1ZXN0EhIKCmF2YXRhcl91cmwYASABKAkiQgoUVXBkYXRlQXZhdGFyUmVzcG9uc2USKgoGcmVzdWx0GAEgASgLMhouY29tbW9uLnYxLlN1Y2Nlc3NSZXNwb25zZSIfCh1SZXF1ZXN0QWNjb3VudERlbGV0aW9uUmVxdWVzdCJMCh5SZXF1ZXN0QWNjb3VudERlbGV0aW9uUmVzcG9uc2USKgoGcmVzdWx0GAEgASgLMhouY29tbW9uLnYxLlN1Y2Nlc3NSZXNwb25zZSJPCh1Db25maXJtQWNjb3VudERlbGV0aW9uUmVxdWVzdBIuCgx2ZXJpZmljYXRpb24YASABKAsyGC5hdXRoLnYxLk9UUFZlcmlmaWNhdGlvbiJMCh5Db25maXJtQWNjb3VudERlbGV0aW9uUmVzcG9uc2USKgoGcmVzdWx0GAEgASgLMhouY29tbW9uLnYxLlN1Y2Nlc3NSZXNwb25zZSIoChhVcGRhdGVQcm9maWxlTmFtZVJlcXVlc3QSDAoEbmFtZRgBIAEoCSJHChlVcGRhdGVQcm9maWxlTmFtZVJlc3BvbnNlEioKBnJlc3VsdBgBIAEoCzIaLmNvbW1vbi52MS5TdWNjZXNzUmVzcG9uc2Uy2gcKDlByb2ZpbGVTZXJ2aWNlEk0KCkdldFByb2ZpbGUSHS5wcm9maWxlLnYxLkdldFByb2ZpbGVSZXF1ZXN0Gh4ucHJvZmlsZS52MS5HZXRQcm9maWxlUmVzcG9uc2UiABJQCgtVcGRhdGVFbWFpbBIeLnByb2ZpbGUudjEuVXBkYXRlRW1haWxSZXF1ZXN0Gh8ucHJvZmlsZS52MS5VcGRhdGVFbWFpbFJlc3BvbnNlIgASWQoOQ2hhbmdlUGFzc3dvcmQSIS5wcm9maWxlLnYxLkNoYW5nZVBhc3N3b3JkUmVxdWVzdBoiLnByb2ZpbGUudjEuQ2hhbmdlUGFzc3dvcmRSZXNwb25zZSIAElAKC1ZlcmlmeUVtYWlsEh4ucHJvZmlsZS52MS5WZXJpZnlFbWFpbFJlcXVlc3QaHy5wcm9maWxlLnYxLlZlcmlmeUVtYWlsUmVzcG9uc2UiABJ0ChdSZXNlbmRWZXJpZmljYXRpb25FbWFpbBIqLnByb2ZpbGUudjEuUmVzZW5kVmVyaWZpY2F0aW9uRW1haWxSZXF1ZXN0GisucHJvZmlsZS52MS5SZXNlbmRWZXJpZmljYXRpb25FbWFpbFJlc3BvbnNlIgASZQoSR2V0QXZhdGFyVXBsb2FkVVJMEiUucHJvZmlsZS52MS5HZXRBdmF0YXJVcGxvYWRVUkxSZXF1ZXN0GiYucHJvZmlsZS52MS5HZXRBdmF0YXJVcGxvYWRVUkxSZXNwb25zZSIAElMKDFVwZGF0ZUF2YXRhchIfLnByb2ZpbGUudjEuVXBkYXRlQXZhdGFyUmVxdWVzdBogLnByb2ZpbGUudjEuVXBkYXRlQXZhdGFyUmVzcG9uc2UiABJxChZSZXF1ZXN0QWNjb3VudERlbGV0aW9uEikucHJvZmlsZS52MS5SZXF1ZXN0QWNjb3VudERlbGV0aW9uUmVxdWVzdBoqLnByb2ZpbGUudjEuUmVxdWVzdEFjY291bnREZWxldGlvblJlc3BvbnNlIgAScQoWQ29uZmlybUFjY291bnREZWxldGlvbhIpLnByb2ZpbGUudjEuQ29uZmlybUFjY291bnREZWxldGlvblJlcXVlc3QaKi5wcm9maWxlLnYxLkNvbmZpcm1BY2NvdW50RGVsZXRpb25SZXNwb25zZSIAEmIKEVVwZGF0ZVByb2ZpbGVOYW1lEiQucHJvZmlsZS52MS5VcGRhdGVQcm9maWxlTmFtZVJlcXVlc3QaJS5wcm9maWxlLnYxLlVwZGF0ZVByb2ZpbGVOYW1lUmVzcG9uc2UiAEI4WjZnaXRodWIuY29tL2F1dGhodWJkZXYvYXBpcy9nZW4vZ28vcHJvZmlsZS92MTtwcm9maWxldjFiBnByb3RvMw", [file_auth_v1_common, file_common_v1_common, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * UserProfile contains comprehensive information about a user's profile.
 *
 * @generated from message profile.v1.UserProfile
 */
export type UserProfile = Message<"profile.v1.UserProfile"> & {
  /**
   * Unique identifier for the user.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * User's display name.
   *
   * @generated from field: google.protobuf.StringValue name = 2;
   */
  name?: string;

  /**
   * User's email address.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * Indicates whether the email has been confirmed.
   *
   * @generated from field: bool email_confirmed = 4;
   */
  emailConfirmed: boolean;

  /**
   * URL to the user's avatar image.
   *
   * @generated from field: google.protobuf.StringValue avatar_url = 5;
   */
  avatarUrl?: string;

  /**
   * Creation timestamp.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * Last update timestamp.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message profile.v1.UserProfile.
 * Use `create(UserProfileSchema)` to create a new message.
 */
export const UserProfileSchema: GenMessage<UserProfile> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 0);

/**
 * GetProfileRequest is an empty request as it operates on the authenticated user.
 *
 * @generated from message profile.v1.GetProfileRequest
 */
export type GetProfileRequest = Message<"profile.v1.GetProfileRequest"> & {
};

/**
 * Describes the message profile.v1.GetProfileRequest.
 * Use `create(GetProfileRequestSchema)` to create a new message.
 */
export const GetProfileRequestSchema: GenMessage<GetProfileRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 1);

/**
 * GetProfileResponse contains the user's profile information.
 *
 * @generated from message profile.v1.GetProfileResponse
 */
export type GetProfileResponse = Message<"profile.v1.GetProfileResponse"> & {
  /**
   * User profile information.
   *
   * @generated from field: profile.v1.UserProfile profile = 1;
   */
  profile?: UserProfile;
};

/**
 * Describes the message profile.v1.GetProfileResponse.
 * Use `create(GetProfileResponseSchema)` to create a new message.
 */
export const GetProfileResponseSchema: GenMessage<GetProfileResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 2);

/**
 * UpdateEmailRequest contains the new email the user wants to change to.
 *
 * @generated from message profile.v1.UpdateEmailRequest
 */
export type UpdateEmailRequest = Message<"profile.v1.UpdateEmailRequest"> & {
  /**
   * New email address for the user.
   *
   * @generated from field: string new_email = 1;
   */
  newEmail: string;
};

/**
 * Describes the message profile.v1.UpdateEmailRequest.
 * Use `create(UpdateEmailRequestSchema)` to create a new message.
 */
export const UpdateEmailRequestSchema: GenMessage<UpdateEmailRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 3);

/**
 * UpdateEmailResponse indicates if the email update process was initiated.
 *
 * @generated from message profile.v1.UpdateEmailResponse
 */
export type UpdateEmailResponse = Message<"profile.v1.UpdateEmailResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.UpdateEmailResponse.
 * Use `create(UpdateEmailResponseSchema)` to create a new message.
 */
export const UpdateEmailResponseSchema: GenMessage<UpdateEmailResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 4);

/**
 * ChangePasswordRequest contains the current and new password for changing password.
 *
 * @generated from message profile.v1.ChangePasswordRequest
 */
export type ChangePasswordRequest = Message<"profile.v1.ChangePasswordRequest"> & {
  /**
   * User's current password for verification.
   *
   * @generated from field: string current_password = 1;
   */
  currentPassword: string;

  /**
   * New password to set.
   *
   * @generated from field: string new_password = 2;
   */
  newPassword: string;
};

/**
 * Describes the message profile.v1.ChangePasswordRequest.
 * Use `create(ChangePasswordRequestSchema)` to create a new message.
 */
export const ChangePasswordRequestSchema: GenMessage<ChangePasswordRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 5);

/**
 * ChangePasswordResponse indicates if the password was successfully changed.
 *
 * @generated from message profile.v1.ChangePasswordResponse
 */
export type ChangePasswordResponse = Message<"profile.v1.ChangePasswordResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.ChangePasswordResponse.
 * Use `create(ChangePasswordResponseSchema)` to create a new message.
 */
export const ChangePasswordResponseSchema: GenMessage<ChangePasswordResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 6);

/**
 * VerifyEmailRequest contains the OTP verification for email.
 *
 * @generated from message profile.v1.VerifyEmailRequest
 */
export type VerifyEmailRequest = Message<"profile.v1.VerifyEmailRequest"> & {
  /**
   * OTP verification data.
   *
   * @generated from field: auth.v1.OTPVerification verification = 1;
   */
  verification?: OTPVerification;
};

/**
 * Describes the message profile.v1.VerifyEmailRequest.
 * Use `create(VerifyEmailRequestSchema)` to create a new message.
 */
export const VerifyEmailRequestSchema: GenMessage<VerifyEmailRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 7);

/**
 * VerifyEmailResponse indicates if the email was successfully verified.
 *
 * @generated from message profile.v1.VerifyEmailResponse
 */
export type VerifyEmailResponse = Message<"profile.v1.VerifyEmailResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.VerifyEmailResponse.
 * Use `create(VerifyEmailResponseSchema)` to create a new message.
 */
export const VerifyEmailResponseSchema: GenMessage<VerifyEmailResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 8);

/**
 * ResendVerificationEmailRequest is an empty request as it operates on the authenticated user.
 *
 * @generated from message profile.v1.ResendVerificationEmailRequest
 */
export type ResendVerificationEmailRequest = Message<"profile.v1.ResendVerificationEmailRequest"> & {
};

/**
 * Describes the message profile.v1.ResendVerificationEmailRequest.
 * Use `create(ResendVerificationEmailRequestSchema)` to create a new message.
 */
export const ResendVerificationEmailRequestSchema: GenMessage<ResendVerificationEmailRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 9);

/**
 * ResendVerificationEmailResponse indicates if a new verification email was sent.
 *
 * @generated from message profile.v1.ResendVerificationEmailResponse
 */
export type ResendVerificationEmailResponse = Message<"profile.v1.ResendVerificationEmailResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.ResendVerificationEmailResponse.
 * Use `create(ResendVerificationEmailResponseSchema)` to create a new message.
 */
export const ResendVerificationEmailResponseSchema: GenMessage<ResendVerificationEmailResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 10);

/**
 * GetAvatarUploadURLRequest contains optional parameters for the avatar upload.
 *
 * @generated from message profile.v1.GetAvatarUploadURLRequest
 */
export type GetAvatarUploadURLRequest = Message<"profile.v1.GetAvatarUploadURLRequest"> & {
  /**
   * Optional file type/extension (e.g., "jpg", "png")
   *
   * @generated from field: google.protobuf.StringValue file_type = 1;
   */
  fileType?: string;

  /**
   * Optional maximum file size in bytes
   *
   * @generated from field: google.protobuf.UInt64Value max_size = 2;
   */
  maxSize?: bigint;
};

/**
 * Describes the message profile.v1.GetAvatarUploadURLRequest.
 * Use `create(GetAvatarUploadURLRequestSchema)` to create a new message.
 */
export const GetAvatarUploadURLRequestSchema: GenMessage<GetAvatarUploadURLRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 11);

/**
 * GetAvatarUploadURLResponse contains the URL for uploading an avatar.
 *
 * @generated from message profile.v1.GetAvatarUploadURLResponse
 */
export type GetAvatarUploadURLResponse = Message<"profile.v1.GetAvatarUploadURLResponse"> & {
  /**
   * Pre-signed URL for uploading the avatar file.
   *
   * @generated from field: string upload_url = 1;
   */
  uploadUrl: string;

  /**
   * URL where the file will be accessible after upload.
   *
   * @generated from field: string file_url = 2;
   */
  fileUrl: string;

  /**
   * Expiration time for the upload URL in seconds.
   *
   * @generated from field: uint64 expires_in = 3;
   */
  expiresIn: bigint;
};

/**
 * Describes the message profile.v1.GetAvatarUploadURLResponse.
 * Use `create(GetAvatarUploadURLResponseSchema)` to create a new message.
 */
export const GetAvatarUploadURLResponseSchema: GenMessage<GetAvatarUploadURLResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 12);

/**
 * UpdateAvatarRequest contains the URL of the uploaded avatar.
 *
 * @generated from message profile.v1.UpdateAvatarRequest
 */
export type UpdateAvatarRequest = Message<"profile.v1.UpdateAvatarRequest"> & {
  /**
   * URL of the uploaded avatar image.
   *
   * @generated from field: string avatar_url = 1;
   */
  avatarUrl: string;
};

/**
 * Describes the message profile.v1.UpdateAvatarRequest.
 * Use `create(UpdateAvatarRequestSchema)` to create a new message.
 */
export const UpdateAvatarRequestSchema: GenMessage<UpdateAvatarRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 13);

/**
 * UpdateAvatarResponse indicates if the avatar was successfully updated.
 *
 * @generated from message profile.v1.UpdateAvatarResponse
 */
export type UpdateAvatarResponse = Message<"profile.v1.UpdateAvatarResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.UpdateAvatarResponse.
 * Use `create(UpdateAvatarResponseSchema)` to create a new message.
 */
export const UpdateAvatarResponseSchema: GenMessage<UpdateAvatarResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 14);

/**
 * RequestAccountDeletionRequest is an empty request as it operates on the authenticated user.
 *
 * @generated from message profile.v1.RequestAccountDeletionRequest
 */
export type RequestAccountDeletionRequest = Message<"profile.v1.RequestAccountDeletionRequest"> & {
};

/**
 * Describes the message profile.v1.RequestAccountDeletionRequest.
 * Use `create(RequestAccountDeletionRequestSchema)` to create a new message.
 */
export const RequestAccountDeletionRequestSchema: GenMessage<RequestAccountDeletionRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 15);

/**
 * RequestAccountDeletionResponse indicates if the account deletion request was processed.
 *
 * @generated from message profile.v1.RequestAccountDeletionResponse
 */
export type RequestAccountDeletionResponse = Message<"profile.v1.RequestAccountDeletionResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.RequestAccountDeletionResponse.
 * Use `create(RequestAccountDeletionResponseSchema)` to create a new message.
 */
export const RequestAccountDeletionResponseSchema: GenMessage<RequestAccountDeletionResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 16);

/**
 * ConfirmAccountDeletionRequest contains the OTP verification for account deletion.
 *
 * @generated from message profile.v1.ConfirmAccountDeletionRequest
 */
export type ConfirmAccountDeletionRequest = Message<"profile.v1.ConfirmAccountDeletionRequest"> & {
  /**
   * OTP verification data.
   *
   * @generated from field: auth.v1.OTPVerification verification = 1;
   */
  verification?: OTPVerification;
};

/**
 * Describes the message profile.v1.ConfirmAccountDeletionRequest.
 * Use `create(ConfirmAccountDeletionRequestSchema)` to create a new message.
 */
export const ConfirmAccountDeletionRequestSchema: GenMessage<ConfirmAccountDeletionRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 17);

/**
 * ConfirmAccountDeletionResponse indicates if the account was successfully deleted.
 *
 * @generated from message profile.v1.ConfirmAccountDeletionResponse
 */
export type ConfirmAccountDeletionResponse = Message<"profile.v1.ConfirmAccountDeletionResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.ConfirmAccountDeletionResponse.
 * Use `create(ConfirmAccountDeletionResponseSchema)` to create a new message.
 */
export const ConfirmAccountDeletionResponseSchema: GenMessage<ConfirmAccountDeletionResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 18);

/**
 * UpdateProfileNameRequest contains the new name for the user.
 *
 * @generated from message profile.v1.UpdateProfileNameRequest
 */
export type UpdateProfileNameRequest = Message<"profile.v1.UpdateProfileNameRequest"> & {
  /**
   * New display name for the user.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message profile.v1.UpdateProfileNameRequest.
 * Use `create(UpdateProfileNameRequestSchema)` to create a new message.
 */
export const UpdateProfileNameRequestSchema: GenMessage<UpdateProfileNameRequest> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 19);

/**
 * UpdateProfileNameResponse indicates if the name was successfully updated.
 *
 * @generated from message profile.v1.UpdateProfileNameResponse
 */
export type UpdateProfileNameResponse = Message<"profile.v1.UpdateProfileNameResponse"> & {
  /**
   * Operation result.
   *
   * @generated from field: common.v1.SuccessResponse result = 1;
   */
  result?: SuccessResponse;
};

/**
 * Describes the message profile.v1.UpdateProfileNameResponse.
 * Use `create(UpdateProfileNameResponseSchema)` to create a new message.
 */
export const UpdateProfileNameResponseSchema: GenMessage<UpdateProfileNameResponse> = /*@__PURE__*/
  messageDesc(file_profile_v1_profile, 20);

/**
 * ProfileService provides methods for managing user profiles.
 * All operations apply only to the authenticated user's own profile.
 *
 * @generated from service profile.v1.ProfileService
 */
export const ProfileService: GenService<{
  /**
   * GetProfile retrieves the current user's profile information.
   *
   * @generated from rpc profile.v1.ProfileService.GetProfile
   */
  getProfile: {
    methodKind: "unary";
    input: typeof GetProfileRequestSchema;
    output: typeof GetProfileResponseSchema;
  },
  /**
   * UpdateEmail initiates the process to change the user's email address.
   * This typically requires verification of the new email.
   *
   * @generated from rpc profile.v1.ProfileService.UpdateEmail
   */
  updateEmail: {
    methodKind: "unary";
    input: typeof UpdateEmailRequestSchema;
    output: typeof UpdateEmailResponseSchema;
  },
  /**
   * ChangePassword updates the user's password.
   * Requires verification of the current password for security.
   *
   * @generated from rpc profile.v1.ProfileService.ChangePassword
   */
  changePassword: {
    methodKind: "unary";
    input: typeof ChangePasswordRequestSchema;
    output: typeof ChangePasswordResponseSchema;
  },
  /**
   * VerifyEmail confirms a user's email address using a verification OTP.
   *
   * @generated from rpc profile.v1.ProfileService.VerifyEmail
   */
  verifyEmail: {
    methodKind: "unary";
    input: typeof VerifyEmailRequestSchema;
    output: typeof VerifyEmailResponseSchema;
  },
  /**
   * ResendVerificationEmail sends a new verification email to the user.
   *
   * @generated from rpc profile.v1.ProfileService.ResendVerificationEmail
   */
  resendVerificationEmail: {
    methodKind: "unary";
    input: typeof ResendVerificationEmailRequestSchema;
    output: typeof ResendVerificationEmailResponseSchema;
  },
  /**
   * GetAvatarUploadURL generates a pre-signed URL for uploading a user avatar.
   *
   * @generated from rpc profile.v1.ProfileService.GetAvatarUploadURL
   */
  getAvatarUploadURL: {
    methodKind: "unary";
    input: typeof GetAvatarUploadURLRequestSchema;
    output: typeof GetAvatarUploadURLResponseSchema;
  },
  /**
   * UpdateAvatar updates the user's profile with the URL of an uploaded avatar.
   *
   * @generated from rpc profile.v1.ProfileService.UpdateAvatar
   */
  updateAvatar: {
    methodKind: "unary";
    input: typeof UpdateAvatarRequestSchema;
    output: typeof UpdateAvatarResponseSchema;
  },
  /**
   * RequestAccountDeletion initiates the process to delete a user's account.
   * This typically sends a confirmation email with a deletion OTP.
   *
   * @generated from rpc profile.v1.ProfileService.RequestAccountDeletion
   */
  requestAccountDeletion: {
    methodKind: "unary";
    input: typeof RequestAccountDeletionRequestSchema;
    output: typeof RequestAccountDeletionResponseSchema;
  },
  /**
   * ConfirmAccountDeletion permanently deletes a user's account after verification.
   *
   * @generated from rpc profile.v1.ProfileService.ConfirmAccountDeletion
   */
  confirmAccountDeletion: {
    methodKind: "unary";
    input: typeof ConfirmAccountDeletionRequestSchema;
    output: typeof ConfirmAccountDeletionResponseSchema;
  },
  /**
   * UpdateProfileName updates the user's display name.
   *
   * @generated from rpc profile.v1.ProfileService.UpdateProfileName
   */
  updateProfileName: {
    methodKind: "unary";
    input: typeof UpdateProfileNameRequestSchema;
    output: typeof UpdateProfileNameResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_profile_v1_profile, 0);

