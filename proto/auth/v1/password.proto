syntax = "proto3";

package auth.v1;

import "auth/v1/common.proto";
import "common/v1/common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/authhubdev/apis/gen/go/auth/v1;authv1";

// PasswordService provides authentication via password.
service PasswordService {
  // Login authenticates a user with email and password.
  rpc Login(LoginRequest) returns (LoginResponse) {}

  // Register creates a new account with email and password.
  rpc Register(RegisterRequest) returns (RegisterResponse) {}

  // RequestPasswordReset initiates a password reset process.
  rpc RequestPasswordReset(RequestPasswordResetRequest) returns (RequestPasswordResetResponse) {}

  // ResetPassword completes a password reset process with OTP verification.
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {}
}

// LoginRequest contains credentials for authentication.
message LoginRequest {
  // Email address of the user.
  string email = 1;
  
  // User's password.
  string password = 2;
}

// LoginResponse contains authentication tokens after successful login.
message LoginResponse {
  // Authentication response with tokens.
  AuthResponse auth = 1;
}

// RegisterRequest contains information for creating a new account.
message RegisterRequest {
  // Email address for the new account.
  string email = 1;
  
  // Password for the new account.
  string password = 2;
  
  // Optional display name for the user.
  google.protobuf.StringValue name = 3;
}

// RegisterResponse contains authentication tokens after successful registration.
message RegisterResponse {
  // Authentication response with tokens.
  AuthResponse auth = 1;
}

// RequestPasswordResetRequest initiates the password reset process.
message RequestPasswordResetRequest {
  // Email address of the account.
  string email = 1;
}

// RequestPasswordResetResponse confirms the password reset process has been initiated.
message RequestPasswordResetResponse {
  // Verification ID to be used with the OTP.
  string verification_id = 1;
}

// ResetPasswordRequest contains verification and new password.
message ResetPasswordRequest {
  // OTP verification data.
  OTPVerification verification = 1;
  
  // New password to set.
  string new_password = 2;
}

// ResetPasswordResponse confirms the password has been reset.
message ResetPasswordResponse {
  // Operation result.
  common.v1.SuccessResponse result = 1;
}