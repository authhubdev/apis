syntax = "proto3";

package auth.v1;

import "auth/v1/common.proto";
import "common/v1/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/authhubdev/apis/gen/go/auth/v1;authv1";

// SessionService provides management of user sessions.
service SessionService {
  // GetSession retrieves details about the current session.
  rpc GetSession(GetSessionRequest) returns (GetSessionResponse) {}
  
  // ListSessions retrieves all active sessions for the current user.
  rpc ListSessions(ListSessionsRequest) returns (ListSessionsResponse) {}
  
  // RevokeSession terminates a specific session by its ID.
  rpc RevokeSession(RevokeSessionRequest) returns (RevokeSessionResponse) {}
  
  // RevokeAllSessions terminates all sessions for the current user.
  rpc RevokeAllSessions(RevokeAllSessionsRequest) returns (RevokeAllSessionsResponse) {}
  
  // RevokeOtherSessions terminates all sessions except the current one.
  rpc RevokeOtherSessions(RevokeOtherSessionsRequest) returns (RevokeOtherSessionsResponse) {}
  
  // RefreshToken refreshes an expired token using a refresh token.
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
}

// Session contains information about a user's authentication session.
message Session {
  // Unique identifier for the session.
  string id = 1;
  
  // User ID associated with the session.
  string user_id = 2;
  
  // IP address from which the session was created.
  string ip = 3;
  
  // User agent (browser/device) information.
  string user_agent = 4;
  
  // Location information derived from the IP.
  string location = 5;
  
  // Whether this is the current active session.
  bool current = 6;
  
  // Creation timestamp.
  google.protobuf.Timestamp created_at = 7;
  
  // Expiration timestamp.
  google.protobuf.Timestamp expires_at = 8;
  
  // Last access timestamp.
  google.protobuf.Timestamp last_accessed_at = 9;
}

// GetSessionRequest is used to retrieve the current session information.
message GetSessionRequest {
}

// GetSessionResponse contains the current session details.
message GetSessionResponse {
  // Current session information.
  Session session = 1;
}

// ListSessionsRequest is used to retrieve all active sessions.
message ListSessionsRequest {
}

// ListSessionsResponse contains a list of all active sessions.
message ListSessionsResponse {
  // List of active sessions.
  repeated Session sessions = 1;
  
  // Total count of active sessions.
  uint32 total = 2;
}

// RevokeSessionRequest is used to terminate a specific session.
message RevokeSessionRequest {
  // ID of the session to revoke.
  google.protobuf.StringValue session_id = 1;
}

// RevokeSessionResponse confirms the session termination.
message RevokeSessionResponse {
  // Operation result.
  common.v1.SuccessResponse result = 1;
}

// RevokeAllSessionsRequest is used to terminate all sessions.
message RevokeAllSessionsRequest {
  // Whether to keep the current session active.
  google.protobuf.BoolValue keep_current = 1;
}

// RevokeAllSessionsResponse confirms all sessions were terminated.
message RevokeAllSessionsResponse {
  // Operation result.
  common.v1.SuccessResponse result = 1;
}

// RevokeOtherSessionsRequest is used to terminate all sessions except the current one.
message RevokeOtherSessionsRequest {
}

// RevokeOtherSessionsResponse confirms other sessions were terminated.
message RevokeOtherSessionsResponse {
  // Operation result.
  common.v1.SuccessResponse result = 1;
}

// RefreshTokenRequest is used to refresh an expired authentication token.
message RefreshTokenRequest {
  // Refresh token obtained during login or previous refresh.
  string refresh_token = 1;
}

// RefreshTokenResponse contains the new authentication tokens.
message RefreshTokenResponse {
  // New authentication tokens.
  AuthResponse auth = 1;
}
