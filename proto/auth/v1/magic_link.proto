syntax = "proto3";

package auth.v1;

import "auth/v1/common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/authhubdev/apis/gen/go/auth/v1;authv1";

// MagicLinkService provides authentication via magic links.
service MagicLinkService {
  // SendMagicLink sends a magic link to the specified email.
  // If the email doesn't exist, a new account will be created.
  rpc SendMagicLink(SendMagicLinkRequest) returns (SendMagicLinkResponse) {}

  // VerifyMagicLink validates the magic link OTP and returns auth tokens.
  rpc VerifyMagicLink(VerifyMagicLinkRequest) returns (VerifyMagicLinkResponse) {}
}

// SendMagicLinkRequest is used to request a magic link for authentication.
message SendMagicLinkRequest {
  // Email address to send the magic link to.
  string email = 1;

  // Optional name for new users.
  google.protobuf.StringValue name = 2;
  
  // Optional redirect URL after successful verification.
  google.protobuf.StringValue redirect_url = 3;
}

// SendMagicLinkResponse confirms that a magic link was sent.
message SendMagicLinkResponse {
  // Verification ID to be used with the OTP.
  string verification_id = 1;
  
  // Indicates if a new user was created.
  bool is_new_user = 2;
}

// VerifyMagicLinkRequest is used to verify a magic link.
message VerifyMagicLinkRequest {
  // OTP verification data.
  OTPVerification verification = 1;
}

// VerifyMagicLinkResponse returns authentication tokens after successful verification.
message VerifyMagicLinkResponse {
  // Authentication tokens for the user.
  AuthResponse auth = 1;
}
